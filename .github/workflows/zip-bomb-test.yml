name: Zip Bomb Chunked Extraction Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-commit:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Git user for committing
    - name: Set up Git user
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    # Step 3: Install p7zip for robust extraction
    - name: Install 7-Zip
      run: sudo apt-get install -y p7zip-full

    # Step 4: Create directory for extracted files
    - name: Create extracted_files2 directory
      run: mkdir -p extracted_files2

    # Step 5: Extract files in chunks and commit each chunk
    - name: Extract and commit chunks
      run: |
        ulimit -n 65535  # Increase file descriptors limit
        ulimit -v unlimited  # Allow unlimited virtual memory
        CHUNK_SIZE=100  # Number of files per chunk
        TOTAL_FILES=$(7z l zbbig2.zip | grep -c '^Path = ')  # Count total files

        for ((i=1; i<=TOTAL_FILES; i+=CHUNK_SIZE)); do
          echo "Extracting chunk from file $i"
          7z x zbbig2.zip -oextracted_files2 -ir"@listfile" || echo "Extraction failed"

          # Check if any files were extracted
          if [ -d "extracted_files2" ] && [ "$(ls -A extracted_files2)" ]; then
            echo "Committing extracted chunk..."
            git add extracted_files2/*
            git commit -m "Add extracted files chunk $i"
            git push || echo "Push failed due to large files"

            # Remove the extracted files to free up space
            rm -rf extracted_files2/*
          else
            echo "No more files to extract."
            break
          fi
        done

    # Step 6: Final cleanup
    - name: Final cleanup
      run: rm -rf extracted_files2 || echo "Cleanup failed"
